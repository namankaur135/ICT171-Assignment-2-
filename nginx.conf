server {
    listen 80;
    listen [::]:80; # Listen on IPv6 as well
 
    server_name eventx.social www.eventx.social;
 
    # Replace with the path to your website's root directory
    root /var/www/eventx.social/html;
    index index.html index.htm;
 
    # Standard location block for serving static files
    location / {
        try_files $uri $uri/ /index.html; # Important for single-page apps or clean URLs
                                          # For a simple static site, $uri $uri/ is often enough.
                                          # Adding /index.html ensures direct requests to directories serve index.html
    }
 
    # Optional: Specific caching for static assets to improve performance
    location ~* \.(?:css|js|jpg|jpeg|gif|png|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1M; # Cache for 1 month
        add_header Cache-Control "public";
        access_log off; # Optional: Disable access logging for static assets
    }
 
    # Optional: Error pages (create these HTML files in your root)
    # error_page 404 /404.html;
    # location = /404.html {
    #     internal;
    # }
    # error_page 500 502 503 504 /50x.html;
    # location = /50x.html {
    #     internal;
    # }
 
    # Optional: Access and error logs for this specific site
    access_log /var/log/nginx/eventx.social.access.log;
    error_log /var/log/nginx/eventx.social.error.log;
 
    # Optional: Security headers (good practice)
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self'; font-src 'self';"; # Start restrictive and open up as needed
 
    # If you have a Gzip configuration in your main nginx.conf, it will apply.
    # Otherwise, you can enable it here:
    # gzip on;
    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;
}
 
# Optional: Redirect www to non-www (or vice-versa)
# If you prefer non-www as canonical:
# server {
#    listen 80;
#    listen [::]:80;
#    server_name www.eventx.social;
#    return 301 $scheme://eventx.social$request_uri;
# }
 
# If you prefer www as canonical:
# server {
#    listen 80;
#    listen [::]:80;
#    server_name eventx.social;
#    return 301 $scheme://www.eventx.social$request_uri;
# }